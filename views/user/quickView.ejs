

<%- include('../partials/navbar.ejs') %>



<div class = "main-wrapper mt-4">
    <div class = "container">
        <div class = "product-div">
            <div class = "product-div-left">
                <div class = "img-container">
                    <img  src = "<%= locals.product.productImg %>" >
                </div>
                <div class = "hover-container">
                    <div><img src = "images/w1.png"></div>
                    <div><img src = "images/w2.png"></div>
                    <div><img src = "images/w3.png"></div>
                    <div><img src = "images/w4.png"></div>
                    <div><img src = "images/w5.png"></div>
                </div>
            </div>
            <div class = "product-div-right col-12 text-center">
                <span class = "product-name"><%= locals.product.productName  %></span>
                <span class = "product-price">â‚¹<%= locals.product.productPrice  %></span>
                <p class = "product-description"><%= locals.product.productDescription %></p>
                <div class="select-size">
                    <span class="select-size-heading text-center mb-3 mt-5"><h5>Select Size</h5></span>
                    <div class="size-options">
                      <% for (let i = 0; i < locals.product.size.length; i++) { %>
                        <!-- Check if the size is available -->
                        <% if (locals.product.size[i]) { %>
                          <!-- Display available size as a radio button -->
                          <label class="size-option">
                            <input type="radio" name="size" value="<%= locals.product.size[i] %>" onclick="selectSize(this.value)">
                            <%= locals.product.size[i] %>
                          </label>
                        <% } else { %>
                          <!-- Display not available size as a shaded label -->
                          <label class="size-option not-available-size">
                            <span class="not-available-shade"></span>
                            <%= i + 5 %> <!-- Display the size based on the index, e.g., 5, 6, 7, etc. -->
                          </label>
                        <% } %>
                      <% } %>
                    </div>
                  </div>
                  
                <div class = "btn-groups btn-center">
                    <a href=" javascript:void(0);" onclick="addToCart('<%= locals.product._id%>')" class = "btn-cart"><i class = "fas fa-shopping-cart"></i>add to bag</a>
                    <a href="#" class = "btn-buynow"><i class = "fas fa-wallet"></i>buy now</a>
                </div>
            </div>
        </div>
    </div>
</div>
<%- include('../partials/footerHome.ejs') %>
<%- include('../partials/footer.ejs') %>


<script>

let selectedSize = null;

  // Function to capture the selected size
  function selectSize(size) {
    selectedSize = size;
  }

  // Function to add a product to the cart with the selected size
  async function addToCart(productId) {
    try {
      if (!selectedSize) {
        alert("Please select a size before adding to cart.");
        return;
      }
    
      const response = await fetch(`/addToCart/${productId}?size=${selectedSize}`);
      const data = await response.json();

      if (response.ok) {
        if (data.successMsg) {
          // Show a success alert to the user
          alert("Product added to cart!");
        } else {
          alert("Failed to add product to cart.");
        }
      } else {
        // Handle HTTP errors
        alert(`Failed to add product to cart. HTTP Error: ${response.status}`);
      }
    } catch (error) {
      console.error(error);
      alert("An error occurred while adding the product to the cart.");
    }
  }


    // Function to add a product to the cart
    // async function addToCart(productId) {
    //   try {
    //     const response = await fetch(`/addToCart/${productId}`);
    //     const data = await response.json();

    //     if(response.ok){

    //     if (data.successMsg) {
    //       // Show a success alert to the user
    //       alert("Product added to cart!");
    //     } else {
    //       alert("Failed to add product to cart.");
    //     }
    // }
    // else {
    //   // Handle HTTP errors
    //   alert(`Failed to add product to cart. HTTP Error: ${response.status}`);
    // }
    //   } catch (error) {
    //     console.error(error);
    //     alert("An error occurred while adding the product to the cart.");
    //   }
    // }
  </script>